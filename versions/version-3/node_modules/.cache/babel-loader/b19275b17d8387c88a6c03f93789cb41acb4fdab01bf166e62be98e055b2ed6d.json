{"ast":null,"code":"var _jsxFileName = \"/Users/ben/StratGO/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\n\n// Helper to check if two cells are adjacent (side or corner)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction areAdjacent(a, b) {\n  const [x1, y1] = a;\n  const [x2, y2] = b;\n  return Math.abs(x1 - x2) <= 1 && Math.abs(y1 - y2) <= 1 && !(x1 === x2 && y1 === y2);\n}\n\n// Helper to check if all selected cells are contiguous\nfunction isContiguous(selected) {\n  if (selected.length <= 1) return true;\n  const visited = new Set();\n  function dfs(cell) {\n    visited.add(cell.join(','));\n    for (const next of selected) {\n      if (!visited.has(next.join(',')) && areAdjacent(cell, next)) {\n        dfs(next);\n      }\n    }\n  }\n  dfs(selected[0]);\n  return visited.size === selected.length;\n}\n\n// Define cell type\n\n// Helper to create a new board\nfunction createBoard(letters) {\n  return letters.map(row => row.map(letter => ({\n    letter,\n    owner: null,\n    captured: false\n  })));\n}\nfunction getOpponent(player) {\n  return player === 'Player 1' ? 'Player 2' : 'Player 1';\n}\n\n// Find all groups of opponent tiles and check for encirclement\nfunction findCapturedGroups(board, currentPlayer) {\n  const size = board.length;\n  const opponent = getOpponent(currentPlayer);\n  const visited = Array.from({\n    length: size\n  }, () => Array(size).fill(false));\n  const capturedGroups = [];\n  function isEdge(i, j) {\n    return i === 0 || j === 0 || i === size - 1 || j === size - 1;\n  }\n  function bfs(startI, startJ) {\n    const queue = [[startI, startJ]];\n    const group = [];\n    let touchesEdge = false;\n    let touchesEmptyOrCaptured = false;\n    visited[startI][startJ] = true;\n    while (queue.length) {\n      const [i, j] = queue.shift();\n      group.push([i, j]);\n      if (isEdge(i, j)) touchesEdge = true;\n      // Check 4 directions (side-touching only)\n      for (const [di, dj] of [[-1, 0], [1, 0], [0, -1], [0, 1]]) {\n        const ni = i + di,\n          nj = j + dj;\n        if (ni < 0 || nj < 0 || ni >= size || nj >= size) continue;\n        const cell = board[ni][nj];\n        if (cell.owner === null || cell.captured) touchesEmptyOrCaptured = true;\n        if (!visited[ni][nj] && cell.owner === opponent && !cell.captured) {\n          visited[ni][nj] = true;\n          queue.push([ni, nj]);\n        }\n      }\n    }\n    // Encircled if not touching edge and not touching empty/captured\n    if (!touchesEdge && !touchesEmptyOrCaptured) {\n      return group;\n    }\n    return null;\n  }\n  for (let i = 0; i < size; i++) {\n    for (let j = 0; j < size; j++) {\n      if (!visited[i][j] && board[i][j].owner === opponent && !board[i][j].captured) {\n        const group = bfs(i, j);\n        if (group) capturedGroups.push(group);\n      }\n    }\n  }\n  return capturedGroups;\n}\nfunction App() {\n  _s();\n  const [board, setBoard] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selected, setSelected] = useState([]);\n  const [error, setError] = useState(null);\n  const [turn, setTurn] = useState('Player 1');\n  const [moves, setMoves] = useState([]);\n  const [validating, setValidating] = useState(false);\n  const [captureScores, setCaptureScores] = useState({\n    'Player 1': 0,\n    'Player 2': 0\n  });\n  const [gameOver, setGameOver] = useState(false);\n  const [winner, setWinner] = useState(null);\n  const [passCount, setPassCount] = useState(0);\n  const [resigned, setResigned] = useState(null);\n\n  // Use the actual backend ngrok URL\n  const BACKEND_URL = 'https://725b82c7d4a2.ngrok-free.app';\n  useEffect(() => {\n    console.log('Fetching board from:', `${BACKEND_URL}/api/board`);\n    fetch(`${BACKEND_URL}/api/board`).then(res => res.json()).then(data => {\n      setBoard(createBoard(data.board));\n      setLoading(false);\n      console.log('Board data set:', data.board);\n    }).catch(err => {\n      console.error('Error fetching board:', err);\n      setError('Failed to load board');\n    });\n  }, []);\n\n  // Get the word from selected cells in order\n  const selectedWord = selected.map(([i, j]) => {\n    var _board$i, _board$i$j;\n    return ((_board$i = board[i]) === null || _board$i === void 0 ? void 0 : (_board$i$j = _board$i[j]) === null || _board$i$j === void 0 ? void 0 : _board$i$j.letter) || '';\n  }).join('');\n\n  // Center square coordinates\n  const center = [9, 9];\n  const isFirstMove = moves.length === 0;\n\n  // Handle cell click\n  const handleCellClick = (i, j) => {\n    const idx = selected.findIndex(([x, y]) => x === i && y === j);\n    let newSelected;\n    if (idx !== -1) {\n      // Deselect cell\n      newSelected = selected.slice(0, idx).concat(selected.slice(idx + 1));\n    } else {\n      // Select cell\n      newSelected = [...selected, [i, j]];\n    }\n    setSelected(newSelected);\n    setError(null);\n  };\n\n  // Scoring table\n  const scoreTable = {\n    2: 2,\n    3: 3,\n    4: 4,\n    5: 6,\n    6: 8,\n    7: 11,\n    8: 14,\n    9: 19,\n    10: 24\n  };\n  function getScore(word) {\n    if (word.length >= 11) return 30;\n    return scoreTable[word.length] || 0;\n  }\n\n  // Handle submit\n  const handleSubmit = async () => {\n    if (gameOver) return;\n    if (selected.length < 2) {\n      setError('Word must be at least 2 letters.');\n      return;\n    }\n    if (!isContiguous(selected)) {\n      setError('Selected letters must be contiguous.');\n      return;\n    }\n    if (isFirstMove && !selected.some(([i, j]) => i === center[0] && j === center[1])) {\n      setError('First word must include the center square.');\n      return;\n    }\n    setError(null);\n    setValidating(true);\n    const res = await fetch(`${BACKEND_URL}/api/validate-word?word=${selectedWord}`);\n    const data = await res.json();\n    setValidating(false);\n    if (!data.valid) {\n      setError(data.reason || 'Invalid word.');\n      return;\n    }\n    // Assign ownership to selected cells\n    let newBoard = [];\n    setBoard(prev => {\n      newBoard = prev.map(row => row.map(cell => ({\n        ...cell\n      })));\n      selected.forEach(([i, j]) => {\n        newBoard[i][j].owner = turn;\n      });\n      return newBoard;\n    });\n    // After ownership assignment, check for captures\n    setTimeout(() => {\n      setBoard(prev => {\n        const boardCopy = prev.map(row => row.map(cell => ({\n          ...cell\n        })));\n        const capturedGroups = findCapturedGroups(boardCopy, turn);\n        let capturedCount = 0;\n        capturedGroups.forEach(group => {\n          group.forEach(([i, j]) => {\n            boardCopy[i][j].captured = true;\n            capturedCount++;\n          });\n        });\n        if (capturedCount > 0) {\n          setCaptureScores(cs => ({\n            ...cs,\n            [turn]: cs[turn] + capturedCount\n          }));\n        }\n        return boardCopy;\n      });\n    }, 0);\n    // Store move\n    const move = {\n      player: turn,\n      word: selectedWord,\n      positions: [...selected],\n      valid: true,\n      score: getScore(selectedWord)\n    };\n    setMoves([...moves, move]);\n    // Switch turn\n    setTurn(turn === 'Player 1' ? 'Player 2' : 'Player 1');\n    setSelected([]);\n    setError(null);\n    setPassCount(0); // reset pass count on valid move\n  };\n  const handlePass = () => {\n    if (gameOver) return;\n    setPassCount(c => c + 1);\n    setTurn(turn === 'Player 1' ? 'Player 2' : 'Player 1');\n    setSelected([]);\n    setError(null);\n  };\n  const handleResign = () => {\n    if (gameOver) return;\n    setResigned(turn);\n    setGameOver(true);\n    setWinner(getOpponent(turn));\n  };\n\n  // End game if both players pass consecutively\n  useEffect(() => {\n    if (passCount >= 2 && !gameOver) {\n      setGameOver(true);\n      // Determine winner\n      const p1 = totalScore('Player 1');\n      const p2 = totalScore('Player 2');\n      if (p1 > p2) setWinner('Player 1');else if (p2 > p1) setWinner('Player 2');else setWinner('Draw');\n    }\n    // eslint-disable-next-line\n  }, [passCount, gameOver]);\n\n  // Update score display\n  const totalScore = player => {\n    const wordScore = moves.filter(m => m.player === player).reduce((sum, m) => sum + m.score, 0);\n    return wordScore + (captureScores[player] || 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Word Strategy Game Prototype\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), gameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#eee',\n        padding: 20,\n        borderRadius: 8,\n        margin: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this), resigned ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: resigned\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 18\n        }, this), \" resigned. \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: winner\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 56\n        }, this), \" wins!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }, this) : winner === 'Draw' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"It's a draw!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: winner\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 18\n        }, this), \" wins!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Final Scores:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 43\n        }, this), \"Player 1: \", totalScore('Player 1'), \" (captures: \", captureScores['Player 1'], \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 87\n        }, this), \"Player 2: \", totalScore('Player 2'), \" (captures: \", captureScores['Player 2'], \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Current Turn:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 16\n        }, this), \" \", turn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '10px 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Scores:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), \" Player 1: \", totalScore('Player 1'), \" (captures: \", captureScores['Player 1'], \") | Player 2: \", totalScore('Player 2'), \" (captures: \", captureScores['Player 2'], \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePass,\n        style: {\n          marginRight: 10\n        },\n        children: \"Pass Turn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResign,\n        style: {\n          marginRight: 10\n        },\n        children: \"Resign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading board...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'inline-block',\n        border: '2px solid #333',\n        marginTop: 20\n      },\n      children: board.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: row.map((cell, j) => {\n          const isSelected = selected.some(([x, y]) => x === i && y === j);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => handleCellClick(i, j),\n            style: {\n              width: 28,\n              height: 28,\n              border: '1px solid #aaa',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              fontWeight: 'bold',\n              fontSize: 18,\n              background: cell.captured ? '#b0b0b0' : isSelected ? '#90ee90' : i === 9 && j === 9 ? '#ffe680' : cell.owner === 'Player 1' ? '#e0f7fa' : cell.owner === 'Player 2' ? '#ffe0e6' : '#fff',\n              cursor: 'pointer',\n              userSelect: 'none'\n            },\n            children: cell.letter\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 19\n          }, this);\n        })\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Selected Word:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), \" \", selectedWord]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: selected.length === 0 || validating,\n      style: {\n        marginTop: 10\n      },\n      children: validating ? 'Validating...' : 'Submit Word'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginTop: 10\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 30,\n        textAlign: 'left',\n        maxWidth: 600,\n        marginLeft: 'auto',\n        marginRight: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Move History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves.map((move, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [move.player, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this), \" \", move.word, \" (\", move.score, \" pts)\"]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UpTjOba8pvdVCxSCKkH2nmqf3Gw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","areAdjacent","a","b","x1","y1","x2","y2","Math","abs","isContiguous","selected","length","visited","Set","dfs","cell","add","join","next","has","size","createBoard","letters","map","row","letter","owner","captured","getOpponent","player","findCapturedGroups","board","currentPlayer","opponent","Array","from","fill","capturedGroups","isEdge","i","j","bfs","startI","startJ","queue","group","touchesEdge","touchesEmptyOrCaptured","shift","push","di","dj","ni","nj","App","_s","setBoard","loading","setLoading","setSelected","error","setError","turn","setTurn","moves","setMoves","validating","setValidating","captureScores","setCaptureScores","gameOver","setGameOver","winner","setWinner","passCount","setPassCount","resigned","setResigned","BACKEND_URL","console","log","fetch","then","res","json","data","catch","err","selectedWord","_board$i","_board$i$j","center","isFirstMove","handleCellClick","idx","findIndex","x","y","newSelected","slice","concat","scoreTable","getScore","word","handleSubmit","some","valid","reason","newBoard","prev","forEach","setTimeout","boardCopy","capturedCount","cs","move","positions","score","handlePass","c","handleResign","p1","totalScore","p2","wordScore","filter","m","reduce","sum","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","background","padding","borderRadius","margin","marginTop","onClick","marginRight","display","border","isSelected","width","height","alignItems","justifyContent","fontWeight","fontSize","cursor","userSelect","disabled","color","textAlign","maxWidth","marginLeft","_c","$RefreshReg$"],"sources":["/Users/ben/StratGO/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\n// Helper to check if two cells are adjacent (side or corner)\nfunction areAdjacent(a: [number, number], b: [number, number]) {\n  const [x1, y1] = a;\n  const [x2, y2] = b;\n  return Math.abs(x1 - x2) <= 1 && Math.abs(y1 - y2) <= 1 && !(x1 === x2 && y1 === y2);\n}\n\n// Helper to check if all selected cells are contiguous\nfunction isContiguous(selected: [number, number][]) {\n  if (selected.length <= 1) return true;\n  const visited = new Set<string>();\n  function dfs(cell: [number, number]) {\n    visited.add(cell.join(','));\n    for (const next of selected) {\n      if (!visited.has(next.join(',')) && areAdjacent(cell, next)) {\n        dfs(next);\n      }\n    }\n  }\n  dfs(selected[0]);\n  return visited.size === selected.length;\n}\n\n// Define cell type\ninterface Cell {\n  letter: string;\n  owner: null | 'Player 1' | 'Player 2';\n  captured: boolean;\n}\n\n// Helper to create a new board\nfunction createBoard(letters: string[][]): Cell[][] {\n  return letters.map(row => row.map(letter => ({ letter, owner: null, captured: false })));\n}\n\nfunction getOpponent(player: 'Player 1' | 'Player 2') {\n  return player === 'Player 1' ? 'Player 2' : 'Player 1';\n}\n\n// Find all groups of opponent tiles and check for encirclement\nfunction findCapturedGroups(board: Cell[][], currentPlayer: 'Player 1' | 'Player 2') {\n  const size = board.length;\n  const opponent = getOpponent(currentPlayer);\n  const visited = Array.from({ length: size }, () => Array(size).fill(false));\n  const capturedGroups: [number, number][][] = [];\n\n  function isEdge(i: number, j: number) {\n    return i === 0 || j === 0 || i === size - 1 || j === size - 1;\n  }\n\n  function bfs(startI: number, startJ: number) {\n    const queue: [number, number][] = [[startI, startJ]];\n    const group: [number, number][] = [];\n    let touchesEdge = false;\n    let touchesEmptyOrCaptured = false;\n    visited[startI][startJ] = true;\n    while (queue.length) {\n      const [i, j] = queue.shift()!;\n      group.push([i, j]);\n      if (isEdge(i, j)) touchesEdge = true;\n      // Check 4 directions (side-touching only)\n      for (const [di, dj] of [\n        [-1, 0], [1, 0], [0, -1], [0, 1]\n      ]) {\n        const ni = i + di, nj = j + dj;\n        if (ni < 0 || nj < 0 || ni >= size || nj >= size) continue;\n        const cell = board[ni][nj];\n        if (cell.owner === null || cell.captured) touchesEmptyOrCaptured = true;\n        if (!visited[ni][nj] && cell.owner === opponent && !cell.captured) {\n          visited[ni][nj] = true;\n          queue.push([ni, nj]);\n        }\n      }\n    }\n    // Encircled if not touching edge and not touching empty/captured\n    if (!touchesEdge && !touchesEmptyOrCaptured) {\n      return group;\n    }\n    return null;\n  }\n\n  for (let i = 0; i < size; i++) {\n    for (let j = 0; j < size; j++) {\n      if (!visited[i][j] && board[i][j].owner === opponent && !board[i][j].captured) {\n        const group = bfs(i, j);\n        if (group) capturedGroups.push(group);\n      }\n    }\n  }\n  return capturedGroups;\n}\n\nfunction App() {\n  const [board, setBoard] = useState<Cell[][]>([]);\n  const [loading, setLoading] = useState(true);\n  const [selected, setSelected] = useState<[number, number][]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [turn, setTurn] = useState<'Player 1' | 'Player 2'>('Player 1');\n  const [moves, setMoves] = useState<{player: string, word: string, positions: [number, number][], valid: boolean, score: number}[]>([]);\n  const [validating, setValidating] = useState(false);\n  const [captureScores, setCaptureScores] = useState<{ [player: string]: number }>({ 'Player 1': 0, 'Player 2': 0 });\n  const [gameOver, setGameOver] = useState(false);\n  const [winner, setWinner] = useState<string | null>(null);\n  const [passCount, setPassCount] = useState(0);\n  const [resigned, setResigned] = useState<string | null>(null);\n\n  // Use the actual backend ngrok URL\n  const BACKEND_URL = 'https://725b82c7d4a2.ngrok-free.app';\n\n  useEffect(() => {\n    console.log('Fetching board from:', `${BACKEND_URL}/api/board`);\n    fetch(`${BACKEND_URL}/api/board`)\n      .then((res) => res.json())\n      .then((data) => {\n        setBoard(createBoard(data.board));\n        setLoading(false);\n        console.log('Board data set:', data.board);\n      })\n      .catch((err) => {\n        console.error('Error fetching board:', err);\n        setError('Failed to load board');\n      });\n  }, []);\n\n  // Get the word from selected cells in order\n  const selectedWord = selected.map(([i, j]) => board[i]?.[j]?.letter || '').join('');\n\n  // Center square coordinates\n  const center = [9, 9];\n  const isFirstMove = moves.length === 0;\n\n  // Handle cell click\n  const handleCellClick = (i: number, j: number) => {\n    const idx = selected.findIndex(([x, y]) => x === i && y === j);\n    let newSelected: [number, number][];\n    if (idx !== -1) {\n      // Deselect cell\n      newSelected = selected.slice(0, idx).concat(selected.slice(idx + 1));\n    } else {\n      // Select cell\n      newSelected = [...selected, [i, j]];\n    }\n    setSelected(newSelected);\n    setError(null);\n  };\n\n  // Scoring table\n  const scoreTable: { [len: number]: number } = {\n    2: 2, 3: 3, 4: 4, 5: 6, 6: 8, 7: 11, 8: 14, 9: 19, 10: 24\n  };\n  function getScore(word: string) {\n    if (word.length >= 11) return 30;\n    return scoreTable[word.length] || 0;\n  }\n\n  // Handle submit\n  const handleSubmit = async () => {\n    if (gameOver) return;\n    if (selected.length < 2) {\n      setError('Word must be at least 2 letters.');\n      return;\n    }\n    if (!isContiguous(selected)) {\n      setError('Selected letters must be contiguous.');\n      return;\n    }\n    if (isFirstMove && !selected.some(([i, j]) => i === center[0] && j === center[1])) {\n      setError('First word must include the center square.');\n      return;\n    }\n    setError(null);\n    setValidating(true);\n    const res = await fetch(`${BACKEND_URL}/api/validate-word?word=${selectedWord}`);\n    const data = await res.json();\n    setValidating(false);\n    if (!data.valid) {\n      setError(data.reason || 'Invalid word.');\n      return;\n    }\n    // Assign ownership to selected cells\n    let newBoard: Cell[][] = [];\n    setBoard(prev => {\n      newBoard = prev.map(row => row.map(cell => ({ ...cell })));\n      selected.forEach(([i, j]) => {\n        newBoard[i][j].owner = turn;\n      });\n      return newBoard;\n    });\n    // After ownership assignment, check for captures\n    setTimeout(() => {\n      setBoard(prev => {\n        const boardCopy = prev.map(row => row.map(cell => ({ ...cell })));\n        const capturedGroups = findCapturedGroups(boardCopy, turn);\n        let capturedCount = 0;\n        capturedGroups.forEach(group => {\n          group.forEach(([i, j]) => {\n            boardCopy[i][j].captured = true;\n            capturedCount++;\n          });\n        });\n        if (capturedCount > 0) {\n          setCaptureScores(cs => ({ ...cs, [turn]: cs[turn] + capturedCount }));\n        }\n        return boardCopy;\n      });\n    }, 0);\n    // Store move\n    const move = {\n      player: turn,\n      word: selectedWord,\n      positions: [...selected],\n      valid: true,\n      score: getScore(selectedWord)\n    };\n    setMoves([...moves, move]);\n    // Switch turn\n    setTurn(turn === 'Player 1' ? 'Player 2' : 'Player 1');\n    setSelected([]);\n    setError(null);\n    setPassCount(0); // reset pass count on valid move\n  };\n\n  const handlePass = () => {\n    if (gameOver) return;\n    setPassCount(c => c + 1);\n    setTurn(turn === 'Player 1' ? 'Player 2' : 'Player 1');\n    setSelected([]);\n    setError(null);\n  };\n\n  const handleResign = () => {\n    if (gameOver) return;\n    setResigned(turn);\n    setGameOver(true);\n    setWinner(getOpponent(turn));\n  };\n\n  // End game if both players pass consecutively\n  useEffect(() => {\n    if (passCount >= 2 && !gameOver) {\n      setGameOver(true);\n      // Determine winner\n      const p1 = totalScore('Player 1');\n      const p2 = totalScore('Player 2');\n      if (p1 > p2) setWinner('Player 1');\n      else if (p2 > p1) setWinner('Player 2');\n      else setWinner('Draw');\n    }\n    // eslint-disable-next-line\n  }, [passCount, gameOver]);\n\n  // Update score display\n  const totalScore = (player: string) => {\n    const wordScore = moves.filter(m => m.player === player).reduce((sum, m) => sum + m.score, 0);\n    return wordScore + (captureScores[player] || 0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Word Strategy Game Prototype</h1>\n      {gameOver ? (\n        <div style={{ background: '#eee', padding: 20, borderRadius: 8, margin: 20 }}>\n          <h2>Game Over</h2>\n          {resigned ? (\n            <div><strong>{resigned}</strong> resigned. <strong>{winner}</strong> wins!</div>\n          ) : winner === 'Draw' ? (\n            <div><strong>It's a draw!</strong></div>\n          ) : (\n            <div><strong>{winner}</strong> wins!</div>\n          )}\n          <div style={{ marginTop: 10 }}>\n            <strong>Final Scores:</strong><br />\n            Player 1: {totalScore('Player 1')} (captures: {captureScores['Player 1']})<br />\n            Player 2: {totalScore('Player 2')} (captures: {captureScores['Player 2']})\n          </div>\n        </div>\n      ) : (\n        <>\n          <div><strong>Current Turn:</strong> {turn}</div>\n          <div style={{ margin: '10px 0' }}>\n            <strong>Scores:</strong> Player 1: {totalScore('Player 1')} (captures: {captureScores['Player 1']}) | Player 2: {totalScore('Player 2')} (captures: {captureScores['Player 2']})\n          </div>\n          <button onClick={handlePass} style={{ marginRight: 10 }}>Pass Turn</button>\n          <button onClick={handleResign} style={{ marginRight: 10 }}>Resign</button>\n        </>\n      )}\n      {loading ? (\n        <p>Loading board...</p>\n      ) : (\n        <div style={{ display: 'inline-block', border: '2px solid #333', marginTop: 20 }}>\n          {board.map((row, i) => (\n            <div key={i} style={{ display: 'flex' }}>\n              {row.map((cell, j) => {\n                const isSelected = selected.some(([x, y]) => x === i && y === j);\n                return (\n                  <div\n                    key={j}\n                    onClick={() => handleCellClick(i, j)}\n                    style={{\n                      width: 28,\n                      height: 28,\n                      border: '1px solid #aaa',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      fontWeight: 'bold',\n                      fontSize: 18,\n                      background: cell.captured\n                        ? '#b0b0b0'\n                        : isSelected\n                        ? '#90ee90'\n                        : (i === 9 && j === 9)\n                        ? '#ffe680'\n                        : cell.owner === 'Player 1'\n                        ? '#e0f7fa'\n                        : cell.owner === 'Player 2'\n                        ? '#ffe0e6'\n                        : '#fff',\n                      cursor: 'pointer',\n                      userSelect: 'none',\n                    }}\n                  >\n                    {cell.letter}\n                  </div>\n                );\n              })}\n            </div>\n          ))}\n        </div>\n      )}\n      <div style={{ marginTop: 20 }}>\n        <strong>Selected Word:</strong> {selectedWord}\n      </div>\n      <button onClick={handleSubmit} disabled={selected.length === 0 || validating} style={{ marginTop: 10 }}>\n        {validating ? 'Validating...' : 'Submit Word'}\n      </button>\n      {error && <div style={{ color: 'red', marginTop: 10 }}>{error}</div>}\n      <div style={{ marginTop: 30, textAlign: 'left', maxWidth: 600, marginLeft: 'auto', marginRight: 'auto' }}>\n        <h2>Move History</h2>\n        <ol>\n          {moves.map((move, idx) => (\n            <li key={idx}>\n              <strong>{move.player}:</strong> {move.word} ({move.score} pts)\n            </li>\n          ))}\n        </ol>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}