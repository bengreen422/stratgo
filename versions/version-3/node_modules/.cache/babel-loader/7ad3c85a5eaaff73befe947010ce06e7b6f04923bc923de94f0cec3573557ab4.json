{"ast":null,"code":"var _jsxFileName = \"/Users/ben/StratGO/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = 'https://aa45a8a8176d.ngrok-free.app'; // Change to ngrok URL for remote play\n\nfunction App() {\n  _s();\n  var _game$moves;\n  const [gameId, setGameId] = useState('');\n  const [inputId, setInputId] = useState('');\n  const [player, setPlayer] = useState('');\n  const [game, setGame] = useState(null);\n  const [selected, setSelected] = useState([]);\n  const [error, setError] = useState(null);\n  const pollingRef = useRef(null);\n\n  // Poll for game state\n  useEffect(() => {\n    if (!gameId) return;\n    const poll = () => {\n      fetch(`${BACKEND_URL}/api/game/${gameId}`).then(res => {\n        if (!res.ok) throw new Error('Game not found or fetch error');\n        return res.json();\n      }).then(setGame).catch(err => {\n        setError('Failed to fetch game state: ' + err);\n        console.error('Polling error:', err);\n      });\n    };\n    poll();\n    pollingRef.current = setInterval(poll, 2000);\n    return () => {\n      if (pollingRef.current) clearInterval(pollingRef.current);\n    };\n  }, [gameId]);\n\n  // Create a new game\n  const handleCreate = async () => {\n    const res = await fetch(`${BACKEND_URL}/api/game`, {\n      method: 'POST'\n    });\n    const data = await res.json();\n    setGameId(data.id);\n    setPlayer('Player 1');\n    setGame(data);\n    setSelected([]);\n    setError(null);\n  };\n\n  // Join an existing game\n  const handleJoin = async () => {\n    try {\n      const res = await fetch(`${BACKEND_URL}/api/game/${inputId}`);\n      if (res.ok) {\n        const data = await res.json();\n        setGameId(inputId);\n        setPlayer('Player 2');\n        setGame(data);\n        setSelected([]);\n        setError(null);\n      } else {\n        setError('Game not found');\n      }\n    } catch (err) {\n      setError('Failed to join game: ' + err);\n      console.error('Join error:', err);\n    }\n  };\n\n  // Handle cell selection\n  const handleCellClick = (i, j) => {\n    if (!game || game.turn !== player) return;\n    const idx = selected.findIndex(([x, y]) => x === i && y === j);\n    let newSelected;\n    if (idx !== -1) {\n      newSelected = selected.slice(0, idx).concat(selected.slice(idx + 1));\n    } else {\n      newSelected = [...selected, [i, j]];\n    }\n    setSelected(newSelected);\n    setError(null);\n  };\n\n  // Submit move\n  const handleSubmit = async () => {\n    if (!game || game.turn !== player) return;\n    if (selected.length < 2) {\n      setError('Select at least 2 letters.');\n      return;\n    }\n    const word = selected.map(([i, j]) => game.board[i][j]).join('');\n    try {\n      const res = await fetch(`${BACKEND_URL}/api/game/${gameId}/move`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          word,\n          positions: selected,\n          player\n        })\n      });\n      if (!res.ok) {\n        const errData = await res.json();\n        setError(errData.error || 'Move failed');\n        return;\n      }\n      const data = await res.json();\n      setGame(data);\n      setSelected([]);\n      setError(null);\n    } catch (err) {\n      setError('Failed to submit move: ' + err);\n      console.error('Move error:', err);\n    }\n  };\n  if (!gameId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Word Strategy Game Multiplayer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreate,\n        children: \"Create New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 10\n        },\n        children: \"or\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: inputId,\n        onChange: e => setInputId(e.target.value),\n        placeholder: \"Enter Game ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleJoin,\n        children: \"Join Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Word Strategy Game Multiplayer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Game ID: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: gameId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"You are: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: player\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Current turn: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: game === null || game === void 0 ? void 0 : game.turn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), (game === null || game === void 0 ? void 0 : game.board) && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'inline-block',\n        border: '2px solid #333',\n        marginTop: 20\n      },\n      children: game.board.map((row, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: row.map((cell, j) => {\n          const isSelected = selected.some(([x, y]) => x === i && y === j);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => handleCellClick(i, j),\n            style: {\n              width: 28,\n              height: 28,\n              border: '1px solid #aaa',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              fontWeight: 'bold',\n              fontSize: 18,\n              background: isSelected ? '#90ee90' : '#fff',\n              cursor: game.turn === player ? 'pointer' : 'not-allowed',\n              userSelect: 'none'\n            },\n            children: cell\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 19\n          }, this);\n        })\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Selected Word:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), \" \", selected.map(([i, j]) => game.board[i][j]).join('')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: selected.length === 0 || game.turn !== player,\n      style: {\n        marginTop: 10\n      },\n      children: \"Submit Word\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginTop: 10\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 30,\n        textAlign: 'left',\n        maxWidth: 600,\n        marginLeft: 'auto',\n        marginRight: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Move History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: game === null || game === void 0 ? void 0 : (_game$moves = game.moves) === null || _game$moves === void 0 ? void 0 : _game$moves.map((move, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [move.player, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), \" \", move.word]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"o8jAeeiKRWSv9C9j6xAok/q626o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","BACKEND_URL","App","_s","_game$moves","gameId","setGameId","inputId","setInputId","player","setPlayer","game","setGame","selected","setSelected","error","setError","pollingRef","poll","fetch","then","res","ok","Error","json","catch","err","console","current","setInterval","clearInterval","handleCreate","method","data","id","handleJoin","handleCellClick","i","j","turn","idx","findIndex","x","y","newSelected","slice","concat","handleSubmit","length","word","map","board","join","headers","body","JSON","stringify","positions","errData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","margin","value","onChange","e","target","placeholder","color","display","border","marginTop","row","cell","isSelected","some","width","height","alignItems","justifyContent","fontWeight","fontSize","background","cursor","userSelect","disabled","textAlign","maxWidth","marginLeft","marginRight","moves","move","_c","$RefreshReg$"],"sources":["/Users/ben/StratGO/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport './App.css';\n\nconst BACKEND_URL = 'https://aa45a8a8176d.ngrok-free.app'; // Change to ngrok URL for remote play\n\nfunction App() {\n  const [gameId, setGameId] = useState<string>('');\n  const [inputId, setInputId] = useState<string>('');\n  const [player, setPlayer] = useState<'Player 1' | 'Player 2' | ''>('');\n  const [game, setGame] = useState<any>(null);\n  const [selected, setSelected] = useState<[number, number][]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const pollingRef = useRef<NodeJS.Timeout | null>(null);\n\n  // Poll for game state\n  useEffect(() => {\n    if (!gameId) return;\n    const poll = () => {\n      fetch(`${BACKEND_URL}/api/game/${gameId}`)\n        .then(res => {\n          if (!res.ok) throw new Error('Game not found or fetch error');\n          return res.json();\n        })\n        .then(setGame)\n        .catch((err) => {\n          setError('Failed to fetch game state: ' + err);\n          console.error('Polling error:', err);\n        });\n    };\n    poll();\n    pollingRef.current = setInterval(poll, 2000);\n    return () => { if (pollingRef.current) clearInterval(pollingRef.current); };\n  }, [gameId]);\n\n  // Create a new game\n  const handleCreate = async () => {\n    const res = await fetch(`${BACKEND_URL}/api/game`, { method: 'POST' });\n    const data = await res.json();\n    setGameId(data.id);\n    setPlayer('Player 1');\n    setGame(data);\n    setSelected([]);\n    setError(null);\n  };\n\n  // Join an existing game\n  const handleJoin = async () => {\n    try {\n      const res = await fetch(`${BACKEND_URL}/api/game/${inputId}`);\n      if (res.ok) {\n        const data = await res.json();\n        setGameId(inputId);\n        setPlayer('Player 2');\n        setGame(data);\n        setSelected([]);\n        setError(null);\n      } else {\n        setError('Game not found');\n      }\n    } catch (err) {\n      setError('Failed to join game: ' + err);\n      console.error('Join error:', err);\n    }\n  };\n\n  // Handle cell selection\n  const handleCellClick = (i: number, j: number) => {\n    if (!game || game.turn !== player) return;\n    const idx = selected.findIndex(([x, y]) => x === i && y === j);\n    let newSelected: [number, number][];\n    if (idx !== -1) {\n      newSelected = selected.slice(0, idx).concat(selected.slice(idx + 1));\n    } else {\n      newSelected = [...selected, [i, j]];\n    }\n    setSelected(newSelected);\n    setError(null);\n  };\n\n  // Submit move\n  const handleSubmit = async () => {\n    if (!game || game.turn !== player) return;\n    if (selected.length < 2) {\n      setError('Select at least 2 letters.');\n      return;\n    }\n    const word = selected.map(([i, j]) => game.board[i][j]).join('');\n    try {\n      const res = await fetch(`${BACKEND_URL}/api/game/${gameId}/move`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ word, positions: selected, player })\n      });\n      if (!res.ok) {\n        const errData = await res.json();\n        setError(errData.error || 'Move failed');\n        return;\n      }\n      const data = await res.json();\n      setGame(data);\n      setSelected([]);\n      setError(null);\n    } catch (err) {\n      setError('Failed to submit move: ' + err);\n      console.error('Move error:', err);\n    }\n  };\n\n  if (!gameId) {\n    return (\n      <div className=\"App\">\n        <h1>Word Strategy Game Multiplayer</h1>\n        <button onClick={handleCreate}>Create New Game</button>\n        <div style={{ margin: 10 }}>or</div>\n        <input value={inputId} onChange={e => setInputId(e.target.value)} placeholder=\"Enter Game ID\" />\n        <button onClick={handleJoin}>Join Game</button>\n        {error && <div style={{ color: 'red' }}>{error}</div>}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Word Strategy Game Multiplayer</h1>\n      <div>Game ID: <b>{gameId}</b></div>\n      <div>You are: <b>{player}</b></div>\n      <div>Current turn: <b>{game?.turn}</b></div>\n      {game?.board && (\n        <div style={{ display: 'inline-block', border: '2px solid #333', marginTop: 20 }}>\n          {game.board.map((row: string[], i: number) => (\n            <div key={i} style={{ display: 'flex' }}>\n              {row.map((cell: string, j: number) => {\n                const isSelected = selected.some(([x, y]) => x === i && y === j);\n                return (\n                  <div\n                    key={j}\n                    onClick={() => handleCellClick(i, j)}\n                    style={{\n                      width: 28,\n                      height: 28,\n                      border: '1px solid #aaa',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      fontWeight: 'bold',\n                      fontSize: 18,\n                      background: isSelected ? '#90ee90' : '#fff',\n                      cursor: game.turn === player ? 'pointer' : 'not-allowed',\n                      userSelect: 'none',\n                    }}\n                  >\n                    {cell}\n                  </div>\n                );\n              })}\n            </div>\n          ))}\n        </div>\n      )}\n      <div style={{ marginTop: 20 }}>\n        <strong>Selected Word:</strong> {selected.map(([i, j]) => game.board[i][j]).join('')}\n      </div>\n      <button onClick={handleSubmit} disabled={selected.length === 0 || game.turn !== player} style={{ marginTop: 10 }}>\n        Submit Word\n      </button>\n      {error && <div style={{ color: 'red', marginTop: 10 }}>{error}</div>}\n      <div style={{ marginTop: 30, textAlign: 'left', maxWidth: 600, marginLeft: 'auto', marginRight: 'auto' }}>\n        <h2>Move History</h2>\n        <ol>\n          {game?.moves?.map((move: any, idx: number) => (\n            <li key={idx}>\n              <strong>{move.player}:</strong> {move.word}\n            </li>\n          ))}\n        </ol>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}